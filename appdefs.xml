<!--
Definitions for FileBot docker container.

This file is used as data source to generate README.md and unRAID template files
from Jinja2 templates.
-->
<defs>
  <app>
    <id>13</id>
    <gui_type>x11</gui_type>
    <friendly_name>FileBot</friendly_name>
    <name>{{ defs.app.friendly_name|lower|replace(' ', '-') }}</name>
    <project>
      <description>
FileBot is the ultimate tool for organizing and renaming your movies, tv shows
or anime, and music well as downloading subtitles and artwork. It's smart and
just works.
      </description>
      <url>http://www.filebot.net/</url>
    </project>
    <unraid>
      <support_url>https://forums.unraid.net/topic/68916-support-filebot/</support_url>
      <category>MediaApp:Other</category>
    </unraid>
    <container>
      <rough_download_size>260MB</rough_download_size>
      <storage_permissions>rw</storage_permissions>
    </container>
    <!-- Extra stuff to be added to the documentation. -->
    <documentation>
      <section>
        <title level="2">License</title>
        <content>
{{ defs.app.friendly_name }} supports a cross-platform custom license model,
which means that a license can be purchased and then be used on all the buyer's
machines.

While {{ defs.app.friendly_name }} can be used/evaluated without a license,
certain features, like renaming files, won't work without one.

A license can be purchased at https://www.filebot.net/purchase.html.
        </content>
      </section>
      <section>
        <title level="3">Installing a License</title>
        <content>
Once purchased, the license file received via email can be saved on the host,
into the configuration directory of the container (i.e. in the directory mapped
to `/config`).

Then, start or restart the container to have it automatically installed.

**NOTE**: The license file is expected to have a `.psm` extension.
        </content>
      </section>
      <section>
        <title level="3">Donation Supported Version</title>
        <content>
In the past, {{ defs.app.friendly_name }} was donation supported, meaning that
the author was expecting users to donate an arbitrary amount of money if they
like and use the software.

The last version of {{ defs.app.friendly_name }} supporting this model is
`4.7.9`.  This version is implemented in container image version `1.0.2`.

To revert to this version, create the container by using
`jlesage/filebot:v1.0.2` as the image name.

**NOTE**: While no license is required to use this version, it is no longer
supported and maintained by the author of {{ defs.app.friendly_name }}.
        </content>
      </section>
      <section>
        <title level="2">Automated Media Center (AMC)</title>
        <content>
This container supports the {{ defs.app.friendly_name }}'s
[Automated Media Center](https://www.filebot.net/forums/viewtopic.php?t=215)
(AMC) script.  This script automatically and smartly organizes movies, TV shows,
anime and music.

Basically, files copied to the `/watch` container folder are automatically
renamed and organized to the `/output` container folder.

Configuration of the AMC script is done via `AMC_*` environment variables. See
the [Environment Variables](#environment-variables) section for the list and
descriptions of environment variables that can be set.

To see what the AMC script is doing, look at the container's log.

**NOTE**: By default, the script runs in dry mode, meaning that no change is
performed.  This allows you to verify that results produced by the script are
correct.  Then, the `AMC_ACTION` environment variable can be updated to perform
changes to the file system.

**NOTE**: For the script to properly function, container folders `/watch` and
`/output` must be properly mapped to the host.  See the
[Data Volumes](#data-volumes) section.
        </content>
      </section>
    </documentation>
    <!-- Changelog of the application. -->
    <history>
      <release>
        <version>1.0.0</version>
        <date>2018-01-31</date>
        <change>Initial release.</change>
      </release>
    </history>
  </app>
  <container>
    <!-- Environment variables -->
    <environment_variables>
      <environment_variable>
        <name>SETTLE_DOWN_TIME</name>
        <description>Time (in seconds) after a change is detected, before the it starts being processed.</description>
        <default>10</default>
        <unraid_template>
          <title>Automated Media Center: Interval</title>
          <display>always</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </environment_variable>
      <environment_variable>
        <name>WATCH_DIR_NAME</name>
        <description>Name of the watch directory (has to be inside the Media directory)</description>
        <default>watch</default>
        <unraid_template>
          <title>Watch Directory</title>
          <description>Name of the watch directory (has to be inside the Media directory)</description>
          <display>advanced</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </environment_variable>
      <environment_variable>
        <name>OUTPUT_DIR_NAME</name>
        <description>Name of the output directory (has to be inside the Media directory)</description>
        <default>output</default>
        <unraid_template>
          <title>Watch Directory</title>
          <description>Name of the output directory (has to be inside the Media directory)</description>
          <display>advanced</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </environment_variable>
    </environment_variables>
    <!-- Volumes -->
    <volumes>
      <volume>
        <container_path>/volume1</container_path>
        <host_path_example>$HOME/media</host_path_example>
        <description>Media directory that contains the watch and output dirs</description>
        <permissions>rw</permissions>
        <include_in_quick_start>false</include_in_quick_start>
        <unraid_template>
          <title>Media Directory</title>
          <description>Media directory that contains the watch and output dirs: /volume1</description>
          <default>$HOME/media</default>
          <display>always</display>
          <required>true</required>
          <mask>false</mask>
        </unraid_template>
      </volume>
    </volumes>
    <!-- Network ports -->
    <ports/>
    <!-- Devices -->
    <devices/>
    <!-- Extra parameters -->
    <extra_params/>
  </container>
</defs>
